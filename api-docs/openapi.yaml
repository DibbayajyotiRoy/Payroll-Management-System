openapi: 3.1.0
info:
  title: Advanced Rust Payroll System API
  description: API for a high-performance, next-generation payroll management system.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /employees:
    post:
      summary: Create a New Employee
      description: Creates a new employee record in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployee'
      responses:
        '200':
          description: Employee created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
    get:
      summary: List All Employees
      description: Retrieves a list of all employees.
      responses:
        '200':
          description: A list of employees.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  
  /employees/{id}:
    get:
      summary: Get Employee by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

  /payroll/run:
    post:
      summary: Run Payroll
      description: Initiates a new payroll run.
      responses:
        '200':
          description: Payroll run initiated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  transaction_id:
                    type: string
                    format: uuid

  /analytics/reports:
    get:
      summary: Get Analytics Reports
      description: Fetches AI-powered analytics.
      responses:
        '200':
          description: Analytics report.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fraud_score:
                    type: number
                  compliance_score:
                    type: number
                  insights:
                    type: array
                    items:
                      type: string

  /chatbot/query:
    post:
      summary: Query the Chatbot
      description: Sends a query to the AI chatbot.
      responses:
        '200':
          description: Chatbot response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string

  /employee/{id}/dashboard:
    get:
      summary: Get Employee Dashboard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Employee dashboard data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee_id:
                    type: string
                    format: uuid
                  available_earned_wages:
                    type: number
                  ytd_gross_pay:
                    type: number

components:
  schemas:
    SalaryInfo:
      type: object
      required:
        - base_salary
        - currency
        - pay_frequency
      properties:
        base_salary:
          type: number
        currency:
          type: string
        pay_frequency:
          type: string
          enum: [Weekly, BiWeekly, Monthly]
        overtime_rate:
          type: number
    
    CreateEmployee:
      type: object
      required:
        - first_name
        - last_name
        - email
        - department
        - position
        - salary_info
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        department:
          type: string
        position:
          type: string
        salary_info:
          $ref: '#/components/schemas/SalaryInfo'

    Employee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        employee_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          nullable: true
        hire_date:
          type: string
          format: date
        department:
          type: string
        position:
          type: string
        employment_type:
          type: string
        status:
          type: string
        salary_info:
          $ref: '#/components/schemas/SalaryInfo'
        benefits:
          type: array
          items: {}
        tax_info:
          type: object
        banking_info:
          type: object
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time